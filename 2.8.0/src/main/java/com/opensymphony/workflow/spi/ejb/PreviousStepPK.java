/*
 * Copyright (c) 2002-2003 by OpenSymphony
 * All rights reserved.
 */
/*
 * Generated by XDoclet - Do not edit!
 */
package com.opensymphony.workflow.spi.ejb;


/**
 * Primary key for CurrentStepPrev.
 * @author Hani Suleiman (hani@formicary.net) Date: Apr 7, 2003 Time: 8:17:26 PM
 */
public class PreviousStepPK extends java.lang.Object implements java.io.Serializable {
    //~ Instance fields ////////////////////////////////////////////////////////

    public java.lang.Long id;
    public java.lang.Long previousId;

    //~ Constructors ///////////////////////////////////////////////////////////

    public PreviousStepPK() {
    }

    public PreviousStepPK(java.lang.Long id, java.lang.Long previousId) {
        this.id = id;
        this.previousId = previousId;
    }

    //~ Methods ////////////////////////////////////////////////////////////////

    public void setId(java.lang.Long id) {
        this.id = id;
    }

    public java.lang.Long getId() {
        return id;
    }

    public void setPreviousId(java.lang.Long previousId) {
        this.previousId = previousId;
    }

    public java.lang.Long getPreviousId() {
        return previousId;
    }

    public boolean equals(Object obj) {
        if (!(obj instanceof com.opensymphony.workflow.spi.ejb.PreviousStepPK)) {
            return false;
        }

        com.opensymphony.workflow.spi.ejb.PreviousStepPK pk = (com.opensymphony.workflow.spi.ejb.PreviousStepPK) obj;
        boolean eq = true;

        if (obj == null) {
            eq = false;
        } else {
            if (this.id != null) {
                eq = eq && this.id.equals(pk.getId());
            } else // this.id == null
             {
                eq = eq && (pk.getId() == null);
            }

            if (this.previousId != null) {
                eq = eq && this.previousId.equals(pk.getPreviousId());
            } else // this.previousId == null
             {
                eq = eq && (pk.getPreviousId() == null);
            }
        }

        return eq;
    }

    public int hashCode() {
        int _hashCode = 0;

        if (this.id != null) {
            _hashCode += this.id.hashCode();
        }

        if (this.previousId != null) {
            _hashCode += this.previousId.hashCode();
        }

        return _hashCode;
    }

    /** @return String representation of this pk in the form of [.field1.field2.field3]. */
    public String toString() {
        StringBuffer toStringValue = new StringBuffer("[.");
        toStringValue.append(this.id).append('.');
        toStringValue.append(this.previousId).append('.');
        toStringValue.append(']');

        return toStringValue.toString();
    }
}
